name: destroy

on:
  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ steps.extract_branch.outputs.branch }}
      - name: Terraform Init
        id: init
        run: |
             cat main.tf 
             terraform init
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out plan.cache
#      - name: encrypt cache
#        run: zip --password "${{ secrets.ZIP_PASSWORD }}" plan.zip plan.cache
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v2
        with:
          name: plan-cache
          path: plan.cache

  destroy:
    runs-on: ubuntu-latest
    needs: init
    environment:
      name: Destroy
 #   env:
 #     TF_VAR_do_token: "${{ secrets.DO_TOKEN }}"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.0
#          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ steps.extract_branch.outputs.branch }}
      - name: Terraform Plan
        id: plan
        run: terraform plan -destroy -no-color -out plan-destroy.cache
      - name: Terraform Destroy
        run: terraform apply -destroy -input=false -no-color -auto-approve plan-destroy.cache
