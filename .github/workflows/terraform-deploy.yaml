name: deploy

on:
  workflow_run:
    workflows:
      - "init"
    types:
      - completed

jobs:
  apply:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ github.event.workflow_run.head_branch }}
      - name: Terraform apply
        run: terraform apply -input=false -no-color -auto-approve plan.cache

  destroy:
    runs-on: ubuntu-latest
    needs: apply
    environment:
      name: Destroy
    env:
      TF_VAR_do_token: "${{ secrets.DO_TOKEN }}"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ steps.extract_branch.outputs.branch }}
      - name: Terraform Plan
        id: plan
        run: terraform plan -destroy -no-color -out plan-destroy.cache
      - name: Terraform Destroy
        run: terraform apply -destroy -input=false -no-color -auto-approve plan-destroy.cache
